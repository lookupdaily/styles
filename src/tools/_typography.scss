@use "sass:map";
@use "sass:string";
@use "create-variables";
@use "../settings";

@mixin font-size($name) {
  font-size: var(--ld-font-size-#{$name});
}

@mixin font-family($name) {
  font-family: var(--ld-font-#{$name});
}

@mixin text($name, $fonts: settings.$fonts) {
  $font-map: map.get($fonts, $name);
  $size: get-size($font-map);
  $weight: get-weight($font-map);

  @include font-family($name);

  @if $size {
    @include font-size($size);
  }

  font-weight: $weight;
}

@mixin get-variables(
  $fonts: settings.$fonts,
  $font-sizes: settings.$font-sizes
) {
  @each $key, $value in $fonts {
    $family: map.get($value, "family");

    --ld-font-#{$key}: #{$family};
  }

  @include create-variables.map("font-size", $font-sizes);
}

@mixin create-classes(
  $fonts: settings.$fonts,
  $font-sizes: settings.$font-sizes
) {
  @each $key, $value in $fonts {
    $font-size: get-size($value);
    $weight: get-weight($value);

    .ld-text-#{$key} {
      font-family: var(--ld-font-#{$key});

      @if $font-size {
        font-size: var(--ld-font-size-#{$font-size});
      }

      @if $weight {
        font-weight: #{$weight};
      }
    }
  }

  @each $key, $value in $font-sizes {
    .ld-text-#{$key} {
      font-size: var(--ld-font-size-#{$key});
    }
  }
}

@function get-size($map) {
  @if $map {
    @return map.get($map, "size");
  }

  @return $map;
}

@function get-weight($map) {
  @if $map {
    @return map.get($map, "weight");
  }

  @return $map;
}
